version: "3.9"
services:
    nginx:
        build:
            context: nginx
        ports:
            - "3000:8080"
        depends_on:
            - frontend

    frontend:
        build:
            context: frontend
        depends_on:
            - backend

    backend:
        build:
            context: backend
        restart: always
        environment:
            PGSTRING: postgres://postgres:example@db:5432/postgres
        volumes:
            - ./media/:/code/media
        depends_on:
            - db

    db:
        image: postgres:11
        restart: always
        environment:
            POSTGRES_PASSWORD: example
        volumes:
            - ./data/:/var/lib/postgresql/data

    # detectron2:
    #     build: detectron2
    #     environment:
    #         BASE_ADDRESS: backend:4000
    #         FETCH_INTERVAL: 10
    #     depends_on:
    #         - backend
    # yolo:
    #     build: yolo
    #     environment:
    #         BASE_ADDRESS: backend:4000
    #         FETCH_INTERVAL: 10
    #     depends_on:
    #       - backend

    # search: # CLIP-based search engine to replace the default search feature
    #     build:
    #         context: search
    #     restart: always
    #     environment:
    #         BASE_ADDRESS: backend:4000 # Set this to the address the backend will be accessible on
    #         PORT: 5000 # Pick a port to run the search-backend on
    #     depends_on:
    #         - backend
    #     volumes:
    #         - ./imageFeatures/:/code/features

    # face: # Facial recognition
    #     build:
    #         context: face
    #     restart: always
    #     environment:
    #         BASE_ADDRESS: backend:4000 # Set this to the address the backend will be accessible on
    #         PORT: 5000 # Pick a port to run the search-backend on
    #     depends_on:
    #         - backend
    #     volumes:
    #         - ./faceFeatures/:/code/features